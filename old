addPlaylist(playlist){
  const { user } = this.props;
  const variables = {
    ownerURI: user.id,
    ownerName: user.display_name,
    image: (playlist && playlist.images[0] && playlist.images[0].url) || (user.images[0] && user.images[0].url),
    playlistName: playlist ? playlist.name : user.display_name
  };
  const sendPlaylistMutation = (variables, callback) => {
    globals.client.mutate({
      mutation: AddPlaylistMutation,
      variables
    }).then(({data})=>{callback(data)});
  }
  const sendSongsMutation = (variables, callback) => {
    globals.client.mutate({
      mutation: CreateSongsMutation,
      variables
    }).then(({data})=>{callback(data)});
  };
  const switchView = (id) => {
    this.props.playlists.push(id, ()=>{
      this.props.close();
      this.props.navigation.navigate('BarList');
    });
  };
  sendPlaylistMutation(variables, data => {
    const id = data.addPlaylist.id;
    let songVariables = { id: id, songs: [] };
    if(playlist) {
      globals.getSongsDataHTTP(user.id, playlist.id, songs => {
        songVariables.songs = songs;
        sendSongsMutation(songVariables, ({createSongs: {id}})=>switchView(id));
      });
    } else {
      sendSongsMutation(songVariables, ({createSongs: {id}})=>switchView(id));
    }
  });
}